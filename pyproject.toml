[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "multi-agent-research-system"
version = "0.2.0"
description = "Enhanced Multi-Agent Research System with Claude Agent SDK Integration"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Enhanced Research System", email = "support@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
keywords = ["claude", "ai", "sdk", "anthropic", "research", "multi-agent", "automation"]
dependencies = [
    # Core SDK and AI dependencies
    "claude-agent-sdk>=0.1.3",
    "anthropic>=0.69.0",
    "pydantic-ai>=1.0.2",
    "mcp>=0.1.0",

    # Async and HTTP handling
    "anyio>=4.0.0",
    "httpx>=0.28.1",
    "aiofiles>=24.1.0",
    "asyncio-mqtt>=0.16.0",

    # Web scraping and content processing
    "crawl4ai>=0.7.4",
    "playwright>=1.55.0",
    "beautifulsoup4>=4.12.3",
    "cssselect>=1.3.0",

    # Data processing and analysis
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "networkx>=3.0",

    # Configuration and environment
    "python-dotenv>=1.0.0",
    "pydantic-settings>=2.0.0",

    # Logging and monitoring
    "logfire>=0.30.0",
    "structlog>=23.0.0",
    "rich>=13.0.0",

    # System utilities
    "psutil>=7.1.0",
    "typing_extensions>=4.0.0; python_version<'3.11'",

    # Additional utilities for enhanced features
    "tenacity>=8.0.0",
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
dev = [
    # Testing framework
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.15.1",

    # Code quality and formatting
    "ruff>=0.13.2",
    "mypy>=1.18.2",
    "black>=23.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",

    # Development tools
    "ipython>=8.0.0",
    "jupyter>=1.0.0",
    "streamlit>=1.50.0",

    # Performance and debugging
    "memory-profiler>=0.61.0",
    "py-spy>=0.3.0",
    "viztracer>=0.16.0",

    # Additional async support
    "anyio[trio]>=4.0.0",
    "trio>=0.22.0",
]

# Optional dependencies for specific features
monitoring = [
    "prometheus-client>=0.17.0",
    "grafana-api>=1.0.3",
    "psutil>=7.1.0",
]

visualization = [
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
]

all = [
    "multi-agent-research-system[dev,monitoring,visualization]",
]

[project.urls]
Homepage = "https://github.com/anthropics/claude-agent-sdk-python"
Documentation = "https://docs.anthropic.com/en/docs/claude-code/sdk"
Issues = "https://github.com/anthropics/claude-agent-sdk-python/issues"

[tool.hatch.build.targets.wheel]
packages = ["multi_agent_research_system"]

[tool.hatch.build.targets.sdist]
include = [
    "/multi_agent_research_system",
    "/tests",
    "/README.md",
    "/LICENSE",
    "/KEVIN",
]

[tool.pytest.ini_options]
testpaths = ["multi_agent_research_system/tests", "tests"]
pythonpath = ["."]
addopts = [
    "--import-mode=importlib",
    "-p", "asyncio",
    "--strict-markers",
    "--strict-config",
    "--cov=multi_agent_research_system",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.pytest-asyncio]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "PTH", # flake8-use-pathlib
    "SIM", # flake8-simplify
]
ignore = [
    "E501", # line too long (handled by formatter)
]

[tool.ruff.lint.isort]
known-first-party = ["multi_agent_research_system"]

[tool.uv]
package = true

[dependency-groups]
dev = [
    "aiofiles>=24.1.0",
    "anthropic>=0.69.0",
    "mypy>=1.18.2",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-mock>=3.15.1",
    "pytest-cov>=4.0.0",
    "ruff>=0.13.2",
    "black>=23.0.0",
    "isort>=5.12.0",
    "streamlit>=1.50.0",
    "ipython>=8.0.0",
    "jupyter>=1.0.0",
    "memory-profiler>=0.61.0",
]

monitoring = [
    "prometheus-client>=0.17.0",
    "grafana-api>=1.0.3",
    "structlog>=23.0.0",
]

visualization = [
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
]
